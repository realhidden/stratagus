$#include "network.h"

void InitNetwork1(void);
void ExitNetwork1(void);

bool IsNetworkGame();

int NetworkSetupServerAddress(const std::string serveraddr);
void NetworkInitClientConnect(void);
void NetworkInitServerConnect(int openslots);
void NetworkServerStartGame(void);
void NetworkProcessClientRequest(void);
$int GetNetworkState() {return (int)NetLocalState;}
int GetNetworkState();
void NetworkServerResyncClients(void);
void NetworkDetachFromServer(void);

class CServerSetup {
	unsigned int ResourcesOption;
	unsigned int UnitsOption;
	unsigned int FogOfWar;
	unsigned int RevealMap;
	unsigned int GameTypeOption;
	unsigned int Difficulty;
	unsigned int MapRichness;
	unsigned CompOpt[PlayerMax];
	unsigned Ready[PlayerMax];
	unsigned Race[PlayerMax];
	unsigned long LastFrame[PlayerMax];
};
extern CServerSetup LocalSetupState;
extern CServerSetup ServerSetupState;
extern int NetLocalHostsSlot;
tolua_readonly int NetPlayerNameSize;
struct CNetworkHost {
	unsigned long  Host;         /// Host address
	unsigned short Port;         /// Port on host
	unsigned short PlyNr;        /// Player nummer
	char           PlyName[NetPlayerNameSize];  /// Name of player
};
extern CNetworkHost Hosts[PlayerMax];

$extern string NetworkMapName;
string NetworkMapName;

$void NetworkGamePrepareGameSettings(void);
void NetworkGamePrepareGameSettings(void);

